<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sofn.dao.tts.TtsScltxxcjUserExpandMapper" >

 <resultMap id="BaseResultMap" type="com.sofn.model.generator.TtsScltxxcjUser" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
    <result column="USER_IDCODE" property="userIdcode" jdbcType="VARCHAR" />
    <result column="ENTITY_IDCODE" property="entityIdcode" jdbcType="VARCHAR" />
    <result column="IS_MAIN" property="isMain" jdbcType="CHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="VARCHAR" />
    <result column="CREATE_BY" property="createBy" jdbcType="VARCHAR" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
  </resultMap>


    <select id="getPageInfo" parameterType="hashmap" resultType="map">
            SELECT Tab.*
            FROM (
            SELECT T.*,ROW_NUMBER() OVER(ORDER BY T.CREATE_TIME DESC) AS NUM from TTS_SCLTXXCJ_USER T
            where 1 = 1 AND T.DEL_FLAG != 'Y' AND t.IS_MAIN !='1' AND
            T.ENTITY_IDCODE = #{admin.entityIdcode}
            <if test="user.name != null and user.name != ''">
                and (T.NAME LIKE '%${user.name}%' OR  T.ACCOUNT LIKE '%${user.name}%')
            </if>
            <if test="createTimeStart != null and createTimeStart != ''">
                <if test="createTimeEnd == null || createTimeEnd == ''">
                    and T.CREATE_TIME  >=  "TO_DATE"(#{createTimeStart}, 'yyyy-mm-dd')
                </if>
            </if>
            <if test="createTimeEnd != null and createTimeEnd != ''">
                <if test="createTimeStart == null || createTimeStart == ''">
                    and T.CREATE_TIME  <![CDATA[ <= ]]>  "TO_DATE"(#{createTimeEnd}, 'yyyy-mm-dd')
                </if>
            </if>
            <if test="createTimeStart != null and createTimeStart != ''">
                <if test="createTimeEnd != null || createTimeEnd != ''">
                    and T.CREATE_TIME BETWEEN "TO_DATE"(#{createTimeStart}, 'yyyy-mm-dd')
                    and "TO_DATE"(#{createTimeEnd}, 'yyyy-mm-dd')
                </if>
            </if>
        )Tab
        WHERE Tab.NUM BETWEEN 1+#{pageSize}*(#{pageNum}-1) AND #{pageSize}*#{pageNum}
        ORDER BY Tab.CREATE_TIME DESC
  </select>
    <select id="getCount" parameterType="hashmap" resultType="long">
        SELECT COUNT(*) FROM TTS_SCLTXXCJ_USER T
        where 1 = 1 AND T.DEL_FLAG != 'Y'
        AND t.IS_MAIN !='1' AND T.ENTITY_IDCODE = #{admin.entityIdcode}
        <if test="user.name != null and user.name != ''">
            and T.NAME LIKE '%${user.name}%' OR  T.ACCOUNT LIKE '%${user.name}%'
        </if>
        <if test="createTimeStart != null and createTimeStart != ''">
            <if test="createTimeEnd == null || createTimeEnd == ''">
                and T.CREATE_TIME  >=  "TO_DATE"(#{createTimeStart}, 'yyyy-mm-dd')
            </if>
        </if>
        <if test="createTimeEnd != null and createTimeEnd != ''">
            <if test="createTimeStart == null || createTimeStart == ''">
                and T.CREATE_TIME  <![CDATA[ <= ]]>  "TO_DATE"(#{createTimeStart}, 'yyyy-mm-dd')
            </if>
        </if>
        <if test="createTimeStart != null and createTimeStart != ''">
            <if test="createTimeEnd != null || createTimeEnd != ''">
                and T.CREATE_TIME BETWEEN "TO_DATE"(#{createTimeStart}, 'yyyy-mm-dd')
                and "TO_DATE"(#{createTimeEnd}, 'yyyy-mm-dd')
            </if>
        </if>
  </select>
    <update id="resetUserPassword" parameterType="hashmap">
        update TTS_SCLTXXCJ_USER
        set
         PASSWORD =  #{user.password,jdbcType=TIMESTAMP}
         where ID =#{user.id,jdbcType=VARCHAR}
    </update>
    <select id="getUserByAccount" resultMap="BaseResultMap" parameterType="map">
        select ID
    , ACCOUNT
    , USER_IDCODE
    , ENTITY_IDCODE
    , IS_MAIN
    , STATUS
    , DEL_FLAG
    , CREATE_BY
    , UPDATE_BY
    , CREATE_TIME
    , NAME
    , PHONE
    , EMAIL
    , ID_CARD
    from TTS_SCLTXXCJ_USER
     where ENTITY_IDCODE =#{account,jdbcType=VARCHAR}
    </select>
    <select id="getUserByTokenAccount" resultMap="BaseResultMap" parameterType="map">
        select ID
    , ACCOUNT
    , USER_IDCODE
    , ENTITY_IDCODE
    , IS_MAIN
    , STATUS
    , DEL_FLAG
    , CREATE_BY
    , UPDATE_BY
    , CREATE_TIME
    , NAME
    , PHONE
    , EMAIL
    , ID_CARD
    from TTS_SCLTXXCJ_USER
     where ACCOUNT =#{account,jdbcType=VARCHAR}
    </select>


    <update id="queryById" parameterType="hashmap">
        update TTS_SCLTXXCJ_USER
        SET DEL_FLAG = 'Y'
        where ID =#{id,jdbcType=VARCHAR}
    </update>

    <select id="getUserByIdCard" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from  TTS_SCLTXXCJ_USER where ID_CARD = #{idCard} and DEL_FLAG != 'Y'
    </select>

    <update id="updateByAccount" parameterType="com.sofn.model.generator.TtsScltxxcjUser" >
        update TTS_SCLTXXCJ_USER
        set
        USER_IDCODE =  #{userIdcode,jdbcType=VARCHAR},
        ENTITY_IDCODE =  #{entityIdcode,jdbcType=VARCHAR},
        DEL_FLAG =  #{delFlag,jdbcType=VARCHAR}
        where ACCOUNT =#{account,jdbcType=VARCHAR}
    </update>

    <update id="updateByacc" parameterType="com.sofn.model.generator.TtsScltxxcjUser" >
        update TTS_SCLTXXCJ_USER
        set
         UPDATE_TIME =  #{updateTime,jdbcType=TIMESTAMP},
         NAME =  #{name,jdbcType=VARCHAR},
         PHONE =  #{phone,jdbcType=VARCHAR},
         ENTITY_IDCODE =  #{entityIdcode,jdbcType=VARCHAR},
         EMAIL =  #{email,jdbcType=VARCHAR},
         DEL_FLAG =  #{delFlag,jdbcType=VARCHAR}
        where ACCOUNT =#{account,jdbcType=VARCHAR}
    </update>
    <update id="updateUserByAccount" parameterType="com.sofn.model.generator.TtsScltxxcjUser" >
        update TTS_SCLTXXCJ_USER
        set
        UPDATE_TIME =  #{updateTime,jdbcType=TIMESTAMP},
        UPDATE_BY =  #{updateBy,jdbcType=TIMESTAMP},
        NAME =  #{name,jdbcType=VARCHAR},
        PHONE =  #{phone,jdbcType=VARCHAR},
        ID_CARD =  #{idCard,jdbcType=VARCHAR},
        EMAIL =  #{email,jdbcType=VARCHAR},
        DEL_FLAG =  #{delFlag,jdbcType=VARCHAR}
        where ACCOUNT =#{account,jdbcType=VARCHAR}
    </update>
</mapper>